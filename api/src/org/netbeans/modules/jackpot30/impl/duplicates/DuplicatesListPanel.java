/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2009 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2009 Sun Microsystems, Inc.
 */
package org.netbeans.modules.jackpot30.impl.duplicates;

import java.awt.Color;
import java.awt.Component;
import java.awt.Rectangle;
import java.io.IOException;
import java.util.Collection;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JEditorPane;
import javax.swing.JList;
import javax.swing.JSplitPane;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.StyleConstants;
import org.netbeans.api.editor.mimelookup.MimePath;
import org.netbeans.api.editor.settings.AttributesUtilities;
import org.netbeans.modules.jackpot30.impl.duplicates.ComputeDuplicates.DuplicateDescription;
import org.netbeans.modules.jackpot30.impl.duplicates.ComputeDuplicates.Span;
import org.netbeans.spi.editor.highlighting.HighlightsLayer;
import org.netbeans.spi.editor.highlighting.HighlightsLayerFactory;
import org.netbeans.spi.editor.highlighting.ZOrder;
import org.netbeans.spi.editor.highlighting.support.OffsetsBag;
import org.netbeans.spi.editor.mimelookup.MimeDataProvider;
import org.openide.filesystems.FileUtil;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;
import org.openide.util.lookup.Lookups;
import org.openide.util.lookup.ServiceProvider;

/**
 *
 * @author lahvac
 */
public class DuplicatesListPanel extends javax.swing.JPanel {
    private final Collection<? extends DuplicateDescription> dupes;

    public DuplicatesListPanel(Collection<? extends DuplicateDescription> dupes) {
        this.dupes = dupes;
        initComponents();

        left.setContentType("text/x-java");
        left.putClientProperty(DuplicatesListPanel.class, new OffsetsBag(left.getDocument()));
        
        right.setContentType("text/x-java");
        right.putClientProperty(DuplicatesListPanel.class, new OffsetsBag(right.getDocument()));

        jList1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent arg0) {
                setDiff((DuplicateDescription) jList1.getSelectedValue());
            }
        });

        jList1.setSelectedIndex(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new BalancedSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        left = new javax.swing.JEditorPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        right = new javax.swing.JEditorPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        jScrollPane2.setViewportView(left);

        jSplitPane1.setLeftComponent(jScrollPane2);

        jScrollPane3.setViewportView(right);

        jSplitPane1.setRightComponent(jScrollPane3);

        jList1.setModel(createListModel());
        jList1.setCellRenderer(new RendererImpl());
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    private ListModel createListModel() {
        DefaultListModel dlm = new DefaultListModel();

        for (DuplicateDescription dd : dupes) {
            dlm.addElement(dd);
        }

        return dlm;
    }

    private Component old;
    
    private void setDiff(DuplicateDescription dd) {
        setSpan(left, dd.dupes.get(0));
        setSpan(right, dd.dupes.get(1));
    }

    private static void setSpan(JEditorPane pane, Span s) {
        try {
            pane.setText(s.file.asText());

            Rectangle top = pane.modelToView(0);
            Rectangle start = pane.modelToView(s.span.getBegin().getOffset());
            Rectangle end = pane.modelToView(s.span.getEnd().getOffset());

            if (top != null && start != null && end != null) {
                Rectangle toScroll = start.union(end);

                pane.scrollRectToVisible(top);
                pane.scrollRectToVisible(toScroll);
            }

            OffsetsBag bag = (OffsetsBag) pane.getClientProperty(DuplicatesListPanel.class);

            bag.clear();
            bag.addHighlight(s.span.getBegin().getOffset(), s.span.getEnd().getOffset(), HIGHLIGHT);
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        } catch (BadLocationException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    private static final AttributeSet HIGHLIGHT = AttributesUtilities.createImmutable(StyleConstants.Background, new Color(0xDF, 0xDF, 0xDF, 0xff));

    private static final class RendererImpl extends DefaultListCellRenderer {
        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            DuplicateDescription dd = (DuplicateDescription) value;
            String name = FileUtil.getFileDisplayName(dd.dupes.get(0).file) + "/" + FileUtil.getFileDisplayName(dd.dupes.get(1).file);

            return super.getListCellRendererComponent(list, name, index, isSelected, cellHasFocus);
        }
    }

    public static final class HighlightLayerFactoryImpl implements HighlightsLayerFactory {
        public HighlightsLayer[] createLayers(Context cntxt) {
            OffsetsBag bag = (OffsetsBag) cntxt.getComponent().getClientProperty(DuplicatesListPanel.class);

            if (bag != null) {
                return new HighlightsLayer[] {
                    HighlightsLayer.create(DuplicatesListPanel.class.getName(), ZOrder.CARET_RACK, true, bag)
                };
            }

            return new HighlightsLayer[0];
        }
    }

    @ServiceProvider(service=MimeDataProvider.class)
    public static final class MDPI implements MimeDataProvider {

        private static final Lookup L = Lookups.singleton(new HighlightLayerFactoryImpl());

        public Lookup getLookup(MimePath mp) {
            if (mp.getPath().startsWith("text/x-java")) {
                return L;
            }

            return null;
        }
        
    }

    private static final class BalancedSplitPane extends JSplitPane {

        @Override
        public void reshape(int x, int y, int w, int h) {
            super.reshape(x, y, w, h);
            SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                    setDividerLocation(0.5);
                }
            });
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JEditorPane left;
    private javax.swing.JEditorPane right;
    // End of variables declaration//GEN-END:variables

}
