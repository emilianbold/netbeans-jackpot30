%%TestCase simple-return
package test;
public class Test {
    public int test(boolean b) {
        if (b)
            return 1;
        else
            return 2;
    }
}
%%=>
package test;
public class Test {
    public int test(boolean b) {
        return b ? 1 : 2;
    }
}
%%TestCase blocks-return
package test;
public class Test {
    public int test(boolean b) {
        if (b) {
            return 1;
        } else {
            return 2;
        }
    }
}
%%=>
package test;
public class Test {
    public int test(boolean b) {
        return b ? 1 : 2;
    }
}
%%TestCase simple-assignment
package test;
public class Test {
    public void test(boolean b) {
        int q = 3;
        if (b)
            q = 1;
        else
            q = 2;
    }
}
%%=>
package test;
public class Test {
    public void test(boolean b) {
        int q = 3;
        q = b ? 1 : 2;
    }
}
%%TestCase simplify-conditional-with-casts
package test;
public class Test {
    public void test(boolean b, Object o1, Object o2) {
        String s = b ? (String) o1 : (String) o2;
    }
}
%%=>
package test;
public class Test {
    public void test(boolean b, Object o1, Object o2) {
        String s = (String) (b ? o1 : o2);
    }
}
%%TestCase simplify-with-declaration
package test;
public class Test {
    public void test(boolean b) {
        int q;
        if (b)
            q = 1;
        else
            q = 2;
    }
}
%%=>
package test;
public class Test {
    public void test(boolean b) {
        int q = b ? 1 : 2;
    }
}
%%=>
package test;
public class Test {
    public void test(boolean b) {
        int q;
        q = b ? 1 : 2;
    }
}
